{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "servicediscovery:ListNamespaces",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "acm:ListCertificates",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Action": "cloudfront:ListDistributions",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Action": "s3:ListAllMyBuckets",
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "AllowS3ListBuckets"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "ecs:DescribeTasks",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Action": "cloudfront:GetDistribution",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Action": "cloudfront:ListInvalidations",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Action": "lambda:GetPolicy",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Action": "s3:GetBucketNotification",
            "Resource": [
                "arn:aws:s3:::cruddur-uploaded-avatar",
                "arn:aws:s3:::yacrud.me",
                "arn:aws:s3:::www.yacrud.me",
                "arn:aws:s3:::assets.yacrud.me"
            ],
            "Effect": "Allow"
        },
        {
            "Action": "s3:GetBucketPolicy",
            "Resource": [
                "arn:aws:s3:::cruddur-uploaded-avatar",
                "arn:aws:s3:::yacrud.me",
                "arn:aws:s3:::www.yacrud.me",
                "arn:aws:s3:::assets.yacrud.me"
            ],
            "Effect": "Allow"
        },
        {
            "Action": "s3:GetBucketCors",
            "Resource": [
                "arn:aws:s3:::cruddur-uploaded-avatar",
                "arn:aws:s3:::yacrud.me",
                "arn:aws:s3:::www.yacrud.me",
                "arn:aws:s3:::assets.yacrud.me"
            ],
            "Effect": "Allow"
        },
        {
            "Action": "s3:GetBucketWebsite",
            "Resource": [
                "arn:aws:s3:::cruddur-uploaded-avatar",
                "arn:aws:s3:::yacrud.me",
                "arn:aws:s3:::www.yacrud.me",
                "arn:aws:s3:::assets.yacrud.me"
            ],
            "Effect": "Allow"
        },
        {
            "Action": "s3:GetBucketPublicAccessBlock",
            "Resource": [
                "arn:aws:s3:::cruddur-uploaded-avatar",
                "arn:aws:s3:::yacrud.me",
                "arn:aws:s3:::www.yacrud.me",
                "arn:aws:s3:::assets.yacrud.me"
            ],
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": [
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeLoadBalancerAttributes"
            ],
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "codebuild:BatchGetProjects",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "acm:DescribeCertificate",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "apigateway:GET",
            "Resource": "arn:aws:apigateway:<region>::/apis//authorizers/*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "apigateway:GET",
            "Resource": "arn:aws:apigateway:<region>::/apis//integrations/*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "cloudformation:ListStackResources",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "codepipeline:GetPipeline",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "cognito-idp:DescribeUserPool",
            "Resource": "arn:aws:cognito-idp:<region>:<aws-id>:userpool/*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "cognito-idp:ListUserPoolClients",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "cognito-idp:ListUsers",
            "Resource": "arn:aws:cognito-idp:<region>:<aws-id>:userpool/*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "dynamodb:DescribeTable",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "dynamodb:DescribeStream",
            "Resource": "*",
            "Effect": "Allow"
        },
        {
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "<region>"
                }
            },
            "Action": "ecr:DescribeImages",
            "Resource": "*",
            "Effect": "Allow"
        }
    ]
}